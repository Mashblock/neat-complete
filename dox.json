[
  {
    "tags": [],
    "description": {
      "full": "<p>Convinience function for applying events to dom element</p>",
      "summary": "<p>Convinience function for applying events to dom element</p>",
      "body": ""
    },
    "ignore": false,
    "code": "NeatComplete.addDomEvent = function(elem, event, fn) {\n    if (elem.attachEvent != null) {\n      elem[\"e\" + event + fn] = fn;\n      elem[\"\" + event + fn] = function() {\n        return elem[\"e\" + event + fn](window.event);\n      };\n      return elem.attachEvent(\"on\" + event, elem[\"\" + event + fn]);\n    } else {\n      return elem.addEventListener(event, fn, false);\n    }\n  };\n\n  if (window.NeatComplete == null) {\n    window.NeatComplete = {};\n  }\n\n  NeatComplete._Result = (function() {\n\n    _Result.name = '_Result';\n\n    function _Result(service, options) {\n      var _ref, _ref1, _ref2, _ref3;\n      this.service = service;\n      this.options = options;\n      this.widget = this.service.widget;\n      this.renderer = this.service.options.renderer || this.widget.options.renderer;\n      this.value = (_ref = this.options) != null ? _ref.value : void 0;\n      this.score = ((_ref1 = this.options) != null ? _ref1.score : void 0) || 0;\n      this.identifier = (_ref2 = this.options) != null ? _ref2.identifier : void 0;\n      this.data = ((_ref3 = this.options) != null ? _ref3.data : void 0) || {};\n    }\n\n    _Result.prototype.render = function() {\n      this.li = document.createElement(\"li\");\n      this.li.innerHTML = this.renderer != null ? this.renderer(this.value, this.data) : this.value;\n      this.li.setAttribute(\"class\", this.widget.item_class);\n      this.addEvents();\n      return this.li;\n    };\n\n    _Result.prototype.addEvents = function() {\n      var _this = this;\n      NeatComplete.addDomEvent(this.li, \"click\", function(e) {\n        _this.selectItem();\n        if (e.preventDefault) {\n          return e.preventDefault();\n        } else {\n          return e.returnValue = false;\n        }\n      });\n      NeatComplete.addDomEvent(this.li, \"mouseover\", function() {\n        return _this.highlight();\n      });\n      NeatComplete.addDomEvent(this.li, \"mouseout\", function() {\n        return _this.unhighlight();\n      });\n      NeatComplete.addDomEvent(this.li, \"mousedown\", function() {\n        return _this.widget.mouseDownOnSelect = true;\n      });\n      return NeatComplete.addDomEvent(this.li, \"mouseup\", function() {\n        return _this.widget.mouseDownOnSelect = false;\n      });\n    };\n\n    _Result.prototype.selectItem = function() {\n      return this.widget.selectHighlighted();\n    };\n\n    _Result.prototype.highlight = function() {\n      var _ref;\n      if ((_ref = this.widget.highlighted) != null) {\n        _ref.unhighlight();\n      }\n      this.li.className = \"\" + this.li.className + \" \" + this.widget.hover_class;\n      return this.widget.highlighted = this;\n    };\n\n    _Result.prototype.unhighlight = function() {\n      this.widget.highlighted = null;\n      return this.li.className = this.li.className.replace(new RegExp(this.widget.hover_class, \"gi\"), \"\");\n    };\n\n    return _Result;\n\n  })();\n\n  if (window.NeatComplete == null) {\n    window.NeatComplete = {};\n  }\n\n  NeatComplete._Service = (function() {\n\n    _Service.name = '_Service';\n\n    function _Service(widget, name, search_fn, options) {\n      var _this = this;\n      this.widget = widget;\n      this.name = name;\n      this.search_fn = search_fn;\n      this.options = options != null ? options : {};\n      this._response = __bind(this._response, this);\n\n      this.results = [];\n      this.response = function(q, data) {\n        return _this._response.apply(_this, arguments);\n      };\n    }\n\n    _Service.prototype.search = function(q) {\n      this.last_query = q;\n      this.ready = false;\n      return this.search_fn(q, this.response);\n    };\n\n    _Service.prototype._response = function(q, data) {\n      var datum, _i, _len;\n      this.results = [];\n      if (this.last_query === q) {\n        this.results = [];\n        for (_i = 0, _len = data.length; _i < _len; _i++) {\n          datum = data[_i];\n          this.results.push(new NeatComplete._Result(this, datum));\n        }\n        this.ready = true;\n        return this.widget.showResults();\n      }\n    };\n\n    return _Service;\n\n  })();",
    "ctx": {
      "type": "method",
      "receiver": "NeatComplete",
      "name": "addDomEvent",
      "string": "NeatComplete.addDomEvent()"
    }
  },
  {
    "tags": [
      {
        "type": "author",
        "string": "Able Technology Ltd."
      },
      {
        "type": "version",
        "string": "0.0.1"
      }
    ],
    "description": {
      "full": "<p>++<em>[black[Neat Complete]</em>++</p>",
      "summary": "<p>++<em>[black[Neat Complete]</em>++</p>",
      "body": ""
    },
    "isPrivate": false,
    "ignore": false,
    "code": "if (window.NeatComplete == null) {\n    window.NeatComplete = {};\n  }\n\n  NeatComplete.Widget = (function() {\n\n    Widget.name = 'Widget';\n\n    Widget.prototype.max_results = 10;\n\n    Widget.prototype.list_class = 'nc_list';\n\n    Widget.prototype.item_class = 'nc_item';\n\n    Widget.prototype.hover_class = 'nc_hover';\n\n    Widget.prototype.footer_class = 'nc_footer';\n\n    Widget.prototype.empty_class = 'nc_empty';"
  },
  {
    "tags": [
      {
        "type": "constructor",
        "string": ""
      },
      {
        "type": "param",
        "types": [
          "Node"
        ],
        "name": "element",
        "description": "input element to apply widget to"
      },
      {
        "type": "param",
        "types": [
          "Object"
        ],
        "name": "options",
        "description": ""
      },
      {
        "type": "returns",
        "string": "{NeatComplete.Widget}"
      }
    ],
    "description": {
      "full": "<p>Constructor for new <code>widget</code> instance</p>",
      "summary": "<p>Constructor for new <code>widget</code> instance</p>",
      "body": ""
    },
    "isPrivate": false,
    "ignore": false,
    "code": "function Widget(element, options) {\n      this.element = element;\n      this.options = options != null ? options : {};\n      this.element.setAttribute('autocomplete', 'off');\n      this.services = [];\n      this._addListeners();\n      this.output = document.createElement(\"ul\");\n      this.output.setAttribute(\"class\", this.list_class);\n      this._applyStyle(\"display\", \"none\");\n      this._applyStyle(\"position\", \"absolute\");\n      document.body.appendChild(this.output);\n      this;\n\n    }",
    "ctx": {
      "type": "function",
      "name": "Widget",
      "string": "Widget()"
    }
  },
  {
    "tags": [
      {
        "type": "param",
        "types": [
          "String"
        ],
        "name": "name",
        "description": ""
      },
      {
        "type": "param",
        "types": [
          "Function"
        ],
        "name": "search_function",
        "description": ""
      }
    ],
    "description": {
      "full": "<p>Method to add a new search service</p>",
      "summary": "<p>Method to add a new search service</p>",
      "body": ""
    },
    "isPrivate": false,
    "ignore": false,
    "code": "Widget.prototype.addService = function(name, search_function) {\n      this.services.push(new NeatComplete._Service(this, name, search_function));\n      return this;\n    };",
    "ctx": {
      "type": "method",
      "constructor": "Widget",
      "name": "addService",
      "string": "Widget.prototype.addService()"
    }
  },
  {
    "tags": [],
    "description": {
      "full": "<p>Setter for options</p>",
      "summary": "<p>Setter for options</p>",
      "body": ""
    },
    "ignore": false,
    "code": "Widget.prototype.setOption = function(name, value) {\n      this.options[name] = value;\n      return this;\n    };",
    "ctx": {
      "type": "method",
      "constructor": "Widget",
      "name": "setOption",
      "string": "Widget.prototype.setOption()"
    }
  },
  {
    "tags": [],
    "description": {
      "full": "<p>Setter for options</p>",
      "summary": "<p>Setter for options</p>",
      "body": ""
    },
    "ignore": false,
    "code": "Widget.prototype.getOption = function(name) {\n      return this.options[name];\n    };",
    "ctx": {
      "type": "method",
      "constructor": "Widget",
      "name": "getOption",
      "string": "Widget.prototype.getOption()"
    }
  },
  {
    "tags": [],
    "description": {
      "full": "<p>Setter for options</p>",
      "summary": "<p>Setter for options</p>",
      "body": ""
    },
    "ignore": false,
    "code": "Widget.prototype.on = function(event_name, callback) {\n      var _base;\n      if (this.subs == null) {\n        this.subs = {};\n      }\n      if ((_base = this.subs)[event_name] == null) {\n        _base[event_name] = [];\n      }\n      this.subs[event_name].push(callback);\n      return this;\n    };",
    "ctx": {
      "type": "method",
      "constructor": "Widget",
      "name": "on",
      "string": "Widget.prototype.on()"
    }
  },
  {
    "tags": [],
    "description": {
      "full": "<p>Setter for options</p>",
      "summary": "<p>Setter for options</p>",
      "body": ""
    },
    "ignore": false,
    "code": "Widget.prototype.trigger = function() {\n      var args, callback, event_name, _i, _len, _ref, _ref1;\n      event_name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (((_ref = this.subs) != null ? _ref[event_name] : void 0) != null) {\n        _ref1 = this.subs[event_name];\n        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n          callback = _ref1[_i];\n          callback.apply(null, args);\n        }\n      }\n      return this;\n    };\n\n    Widget.prototype._addListeners = function() {\n      var _this = this;\n      NeatComplete.addDomEvent(this.element, \"focus\", function(e) {\n        return _this.focused = true;\n      });\n      NeatComplete.addDomEvent(this.element, \"keypress\", function(e) {\n        var keyCode, _ref;\n        keyCode = e.which || e.keyCode;\n        if (keyCode === 13) {\n          if ((_ref = _this.highlighted) != null) {\n            _ref.selectItem();\n          }\n          if (e.preventDefault) {\n            e.preventDefault();\n          } else {\n            e.returnValue = false;\n          }\n          return false;\n        }\n      });\n      NeatComplete.addDomEvent(this.element, \"keydown\", function(e) {\n        var keyCode, _ref;\n        keyCode = e.which || e.keyCode;\n        switch (keyCode) {\n          case 38:\n            _this._moveHighlight(-1);\n            return false;\n          case 40:\n            _this._moveHighlight(1);\n            return false;\n          case 9:\n            return (_ref = _this.highlighted) != null ? _ref.selectItem() : void 0;\n          case 27:\n            return _this._hideResults();\n          case 37:\n          case 39:\n          case 13:\n            break;\n          default:\n            if (_this._timeout != null) {\n              clearTimeout(_this._timeout);\n            }\n            return _this._timeout = setTimeout(function() {\n              return _this._getSuggestions();\n            }, 400);\n        }\n      });\n      return NeatComplete.addDomEvent(this.element, \"blur\", function(e) {\n        if (!_this.mouseDownOnSelect) {\n          _this.focused = false;\n          return _this._hideResults();\n        }\n      });\n    };\n\n    Widget.prototype._moveHighlight = function(step) {\n      var current_index, _ref, _ref1;\n      current_index = this.highlighted != null ? this.results.indexOf(this.highlighted) : -1;\n      if ((_ref = this.highlighted) != null) {\n        _ref.unhighlight();\n      }\n      current_index += step;\n      if (current_index < -1) {\n        current_index = this.results.length - 1;\n      } else if (current_index >= this.results.length) {\n        current_index = -1;\n      }\n      if ((_ref1 = this.results[current_index]) != null) {\n        _ref1.highlight();\n      }\n      return this.element.value = this.highlighted != null ? this.highlighted.value : this._val;\n    };\n\n    Widget.prototype._getSuggestions = function() {\n      var service, _i, _len, _ref, _results;\n      this._val = this.element.value;\n      if (this._val !== '') {\n        _ref = this.services;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          service = _ref[_i];\n          _results.push(service.search(this._val));\n        }\n        return _results;\n      } else {\n        return this._hideResults();\n      }\n    };\n\n    Widget.prototype._applyStyle = function(attr, value) {\n      return this.output.style[attr] = value;\n    };\n\n    Widget.prototype._getPosition = function() {\n      var coords, el;\n      el = this.element;\n      coords = {\n        top: el.offsetTop + el.offsetHeight,\n        left: el.offsetLeft\n      };\n      while (el = el.offsetParent) {\n        coords.top += el.offsetTop;\n        coords.left += el.offsetLeft;\n      }\n      return coords;\n    };\n\n    Widget.prototype._hideResults = function() {\n      var service, _i, _len, _ref, _results;\n      this._applyStyle(\"display\", \"none\");\n      this.results = [];\n      _ref = this.services;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        service = _ref[_i];\n        _results.push(service.results = []);\n      }\n      return _results;\n    };\n\n    Widget.prototype._displayResults = function() {\n      var coords;\n      coords = this._getPosition();\n      this._applyStyle(\"left\", \"\" + coords.left + \"px\");\n      this._applyStyle(\"top\", \"\" + coords.top + \"px\");\n      return this._applyStyle(\"display\", \"block\");\n    };\n\n    Widget.prototype._renderItem = function(content, cls) {\n      var item;\n      item = document.createElement(\"li\");\n      item.innerHTML = content;\n      if (cls != null) {\n        item.setAttribute(\"class\", cls);\n      }\n      return item;\n    };\n\n    Widget.prototype._renderFooter = function() {\n      return this._renderItem(this.options.footerContent, 'nc_footer');\n    };\n\n    Widget.prototype._renderEmpty = function() {\n      return this._renderItem(this.options.emptyContent, 'nc_empty');\n    };\n\n    Widget.prototype._servicesReady = function() {\n      var service, states, _i, _len, _ref;\n      states = [];\n      _ref = this.services;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        service = _ref[_i];\n        states.push(service.ready);\n      }\n      return states.indexOf(false) < 0;\n    };\n\n    Widget.prototype.showResults = function() {\n      var result, service, _i, _j, _len, _len1, _ref, _ref1;\n      if (this._servicesReady()) {\n        this.results = [];\n        this.output.innerHTML = \"\";\n        _ref = this.services;\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          service = _ref[_i];\n          this.results = this.results.concat(service.results);\n        }\n        if (this.results.length) {\n          this.results = this.results.sort(function(a, b) {\n            return b.score - a.score;\n          });\n          this.results = this.results.slice(0, (this.max_results - 1) + 1 || 9e9);\n          _ref1 = this.results;\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            result = _ref1[_j];\n            this.output.appendChild(result.render());\n          }\n          if (this.options.footerContent != null) {\n            this.output.appendChild(this._renderFooter());\n          }\n          this._displayResults();\n        } else if (this.options.emptyContent != null) {\n          this.output.appendChild(this._renderEmpty());\n          this._displayResults();\n          this.trigger(\"results:empty\");\n        } else {\n          this._hideResults();\n        }\n        return this.trigger(\"results:update\");\n      }\n    };\n\n    Widget.prototype.selectHighlighted = function() {\n      this.element.value = this.highlighted.value;\n      this._hideResults();\n      return this.trigger(\"result:select\", this.highlighted.value, this.highlighted.data);\n    };\n\n    return Widget;\n\n  })();\n\n}).call(this);",
    "ctx": {
      "type": "method",
      "constructor": "Widget",
      "name": "trigger",
      "string": "Widget.prototype.trigger()"
    }
  }
]